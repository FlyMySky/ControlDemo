<?xml version="1.0"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       applicationComplete="initApp(event)"
                       showStatusBar="false"
                       close="onClosed(event)"
>
    <fx:Declarations>
        <fx:Model source="assets/btn-text-config.xml" id="model"/>
    </fx:Declarations>

    <fx:Style source="style/BtnStyle.css"/>
    <fx:Script><![CDATA[
        import mx.events.FlexEvent;

        import service.SocketHandler;

        internal var socketHandler:SocketHandler;

        private function initApp(event:FlexEvent):void {

            stage.displayState = StageDisplayState.FULL_SCREEN;
            borderContainer.width = stage.width;
            borderContainer.height = stage.height;
            try {
                socketHandler = new SocketHandler();
                socketHandler.connect()
            } catch (e:Error) {
                trace("connect fail")
            }
        }

        private function onClosed(event:Event):void {
            if (socketHandler != null) {
                socketHandler.close();
                trace("wsServerSocket close")
            }
        }
        ]]></fx:Script>
    <s:BorderContainer
            id="borderContainer"
            width="100%" height="100%" backgroundImage="@Embed(source='assets/client-background.jpg')"
            backgroundImageFillMode="scale">
        <s:VGroup gap="{model.btnSpaceWidth}" horizontalAlign="center" verticalAlign="middle" width="100%"
                  height="100%">
            <s:HGroup gap="{model.btnSpaceHeight}">
                <s:Button click="socketHandler.sendMsg('1')"
                          label="{model.btnPlay}"
                          visible="{model.btnPlayVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
                <s:Button click="socketHandler.sendMsg('2')"
                          label="{model.btnPause}"
                          visible="{model.btnPauseVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
                <s:Button click="socketHandler.sendMsg('3')"
                          label="{model.btnStop}"
                          visible="{model.btnStopVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
            </s:HGroup>
            <s:HGroup gap="200">
                <s:Button click="socketHandler.sendMsg('4')"
                          label="{model.btnVolumeUp}"
                          visible="{model.btnVolumeUpVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
                <s:Button click="socketHandler.sendMsg('6')"
                          label="{model.btnAdd}"
                          visible="{model.btnAddVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
                <s:Button click="socketHandler.sendMsg('5')"
                          label="{model.btnVolumeDown}"
                          visible="{model.btnVolumeDownVisible}"
                          skinClass="skins.MyButtonSkin"
                          styleName="btn-style"
                          width="{model.btnWidth}"
                          height="{model.btnHeight}"/>
            </s:HGroup>
        </s:VGroup>
    </s:BorderContainer>

</s:WindowedApplication>
